name: Deploy on EKS

on:
  workflow_run: 
    workflows: ["Terraform infra Apply (Manual Approval)"]
    types:
    - completed

  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD}}

    - name: Get Latest Docker Tag
      id: latest_tag
      run: |
        LATEST_TAG=$(curl -s https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/flask-docker-cicd/tags | jq -r '.results[0].name')
        echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

    - name: Increment Tag & Build
      id: increment_tag
      run: |
        VERSION_NUM=$(echo "$LATEST_TAG" | grep -o '[0-9]\+')
        NEXT_TAG=v$((VERSION_NUM + 1))
        echo "NEXT_TAG=$NEXT_TAG" >> $GITHUB_ENV
        echo "Next Tag: $NEXT_TAG"
        docker build -t flask-docker-cicd:$NEXT_TAG .

    - name: Scan Docker Image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: flask-docker-cicd:{{ env.NEXT_TAG }}
        format: 'table'
        exit-code: 0
        ignore-unfixed: true

    - name: Push Image to DockerHub
      run: |
        docker tag flask-docker-cicd:$NEXT_TAG ${{ secrets.DOCKER_USERNAME }}/flask-docker-cicd:$NEXT_TAG
        docker push ${{ secrets.DOCKER_USERNAME }}/flask-docker-cicd:$NEXT_TAG 
        
    - name: Update Deployment YAML
      run: |
        sed -i "s|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/flask-docker-cicd:$NEXT_TAG|" terraform/eks_cluster/deployment.yaml
    
    - name: Update Version File
      run: |
        echo "$NEXT_TAG" > version.txt
        git config --global user.email "${{ secrets.GH_EMAIL }}"
        git config --global user.name "${{ secrets.GH_USERNAME }}"
        git add version.txt
        git commit -m "Increment Version to $NEXT_TAG"
        git push

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name EKSCluster --region us-east-1

    - name: Deploy to EKS
      run: |
        kubectl apply -f terraform/eks_cluster/deployment.yaml
        kubectl apply -f terraform/eks_cluster/service.yaml

    - name: Verify Deployment (Pods, Deployments, Services)
      run: |
        echo "=== Pods ==="
        kubectl get pods -o wide
        echo "=== Deployments ==="
        kubectl get deployments -o wide
        echo "=== Services ==="
        kubectl get svc -o wide
